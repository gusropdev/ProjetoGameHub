// <auto-generated />
using System;
using GameHub.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameHub.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250903184140_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameGenre", b =>
                {
                    b.Property<Guid>("GamesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.HasKey("GamesId", "GenresId");

                    b.HasIndex("GenresId");

                    b.ToTable("GameGenre");
                });

            modelBuilder.Entity("GameHub.Domain.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AgeRating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<decimal>("DailyRentalPrice")
                        .HasPrecision(19, 4)
                        .HasColumnType("SMALLMONEY");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("PurchasePrice")
                        .HasPrecision(19, 4)
                        .HasColumnType("SMALLMONEY");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Games", (string)null);
                });

            modelBuilder.Entity("GameHub.Domain.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            Name = "RPG"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 6,
                            Name = "MMORPG"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Simulation"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Puzzle"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Idle"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Shooter"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Fighting"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Platformer"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Racing"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Educational"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Roguelike"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Visual Novel"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Party"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Stealth"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Survival"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Battle Royale"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Metroidvania"
                        },
                        new
                        {
                            Id = 25,
                            Name = "MOBA"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Card Game"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Board Game"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Arcade"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Rhythm"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Tycoon"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("GameHub.Domain.Entities.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "PC (Windows)"
                        },
                        new
                        {
                            Id = 2,
                            Name = "MacOS"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Linux"
                        },
                        new
                        {
                            Id = 4,
                            Name = "PlayStation 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "PlayStation 5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Xbox One"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Xbox Series X/S"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Nintendo Switch"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Android"
                        },
                        new
                        {
                            Id = 10,
                            Name = "iOS"
                        },
                        new
                        {
                            Id = 11,
                            Name = "VR"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Cloud Gaming"
                        });
                });

            modelBuilder.Entity("GameHub.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("GameHub.Domain.Entities.UserLicense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActivatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LicenseType")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("UserLicenses", (string)null);
                });

            modelBuilder.Entity("GamePlatform", b =>
                {
                    b.Property<Guid>("GamesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PlatformsId")
                        .HasColumnType("int");

                    b.HasKey("GamesId", "PlatformsId");

                    b.HasIndex("PlatformsId");

                    b.ToTable("GamePlatform");
                });

            modelBuilder.Entity("GameGenre", b =>
                {
                    b.HasOne("GameHub.Domain.Entities.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameHub.Domain.Entities.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameHub.Domain.Entities.UserLicense", b =>
                {
                    b.HasOne("GameHub.Domain.Entities.Game", "Game")
                        .WithMany("UserLicenses")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GameHub.Domain.Entities.User", "User")
                        .WithMany("UserLicenses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GamePlatform", b =>
                {
                    b.HasOne("GameHub.Domain.Entities.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameHub.Domain.Entities.Platform", null)
                        .WithMany()
                        .HasForeignKey("PlatformsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameHub.Domain.Entities.Game", b =>
                {
                    b.Navigation("UserLicenses");
                });

            modelBuilder.Entity("GameHub.Domain.Entities.User", b =>
                {
                    b.Navigation("UserLicenses");
                });
#pragma warning restore 612, 618
        }
    }
}
